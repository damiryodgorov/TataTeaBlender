var Pool = require('../index');
var chai_1 = require('chai');
describe('Pool', function () {
    var Test = (function () {
        function Test() {
            this.test = null;
        }
        Test.prototype.construct = function () {
            this.reset();
        };
        Test.prototype.reset = function () {
            this.test = null;
        };
        return Test;
    })();
    it('accepts a class constructor', function () {
        var pool = new Pool(Test);
        var obj = pool.get();
        chai_1.expect(obj).to.be.an.instanceof(Test);
    });
    it('accepts returns unique objects', function () {
        var pool = new Pool(Test);
        var obj = pool.get();
        chai_1.expect(obj).to.be.an.instanceof(Test);
        var obj2 = pool.get();
        chai_1.expect(obj2).to.be.an.instanceof(Test);
        chai_1.expect(obj2).to.not.equal(obj);
    });
    it('recycles', function () {
        var pool = new Pool(Test);
        var obj = pool.get();
        var obj2 = pool.get();
        chai_1.expect(obj2).not.to.equal(obj);
        pool.release(obj);
        var obj3 = pool.get();
        chai_1.expect(obj3).to.equal(obj);
        pool.release(obj2);
        var obj4 = pool.get();
        chai_1.expect(obj4).to.equal(obj2);
    });
});
//# sourceMappingURL=index.js.map